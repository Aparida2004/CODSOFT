<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Basic Calculator</title>
</head>
<body>
  <div class="calculator">
    <div class="display" id="display">0</div>
    <div class="buttons">
      <button class="btn" data-action="clear">C</button>
      <button class="btn" data-action="delete">DEL</button>
      <button class="btn" data-action="divide">÷</button>
      <button class="btn" data-action="multiply">×</button>

      <button class="btn" data-value="7">7</button>
      <button class="btn" data-value="8">8</button>
      <button class="btn" data-value="9">9</button>
      <button class="btn" data-action="subtract">−</button>

      <button class="btn" data-value="4">4</button>
      <button class="btn" data-value="5">5</button>
      <button class="btn" data-value="6">6</button>
      <button class="btn" data-action="add">+</button>

      <button class="btn" data-value="1">1</button>
      <button class="btn" data-value="2">2</button>
      <button class="btn" data-value="3">3</button>
      <button class="btn" data-action="equals">=</button>

      <button class="btn" data-value="0" class="zero">0</button>
      <button class="btn" data-value=".">.</button>
    </div>
  </div>
  <style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: Arial, sans-serif;
  }
  
  body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f0f0f0;
  }
  
  .calculator {
    width: 300px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }
  
  .display {
    height: 70px;
    background-color: #222;
    color: #fff;
    font-size: 2rem;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    padding: 0 15px;
    overflow: hidden;
  }
  
  .buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 1px;
  }
  
  .btn {
    height: 70px;
    font-size: 1.5rem;
    border: none;
    outline: none;
    cursor: pointer;
    background-color: #e0e0e0;
    transition: background-color 0.3s;
  }
  
  .btn:active {
    background-color: #d0d0d0;
  }
  
  [data-action="clear"] {
    background-color: #f44336;
    color: white;
  }
  
  [data-action="equals"] {
    background-color: #4caf50;
    color: white;
    grid-column: span 2;
  }
  
  .zero {
    grid-column: span 2;
  }
  </style>
  <script>
    const display = document.getElementById('display');
     let currentInput = '';
    let previousInput = '';
    let operator = null;
   const buttons = document.querySelectorAll('.btn');
    buttons.forEach(button => {
    button.addEventListener('click', () => {
    const value = button.dataset.value;
    const action = button.dataset.action;

    if (value) {
      handleNumber(value);
    } else if (action) {
      handleAction(action);
    }
  });
});
function handleNumber(value) {
  if (currentInput.length < 10) {
    if (currentInput === '0' && value === '0') return;
    if (currentInput === '0' && value !== '.') currentInput = value;
    else currentInput += value;

    updateDisplay(currentInput);
  }
}
function handleAction(action) {
   if (action === 'clear') {
    currentInput = '';
    previousInput = '';
    operator = null;
    updateDisplay('0');
  } else if (action === 'delete') {
    currentInput = currentInput.slice(0, -1) || '0';
    updateDisplay(currentInput);
  } else if (action === 'equals') {
    if (previousInput && currentInput && operator) {
      currentInput = String(calculate(previousInput, currentInput, operator));
      operator = null;
      previousInput = '';
      updateDisplay(currentInput);
    }
  } else {
    if (currentInput) {
      if (previousInput && operator) {
        currentInput = String(calculate(previousInput, currentInput, operator));
      }
      operator = action;
      previousInput = currentInput;
      currentInput = '';
    }
  }
}
function calculate(a, b, operator) {
  const num1 = parseFloat(a);
  const num2 = parseFloat(b);
   switch (operator) {
    case 'add':
      return num1 + num2;
    case 'subtract':
      return num1 - num2;
    case 'multiply':
      return num1 * num2;
    case 'divide':
      return num2 !== 0 ? num1 / num2 : 'Error';
    default:
      return 0;
  }
}
function updateDisplay(value) {
  display.textContent = value;
}
</script>
</body>
</html>

